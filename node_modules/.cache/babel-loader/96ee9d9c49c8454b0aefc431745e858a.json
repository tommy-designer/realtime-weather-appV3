{"ast":null,"code":"import React, { useState, useEffect, useCallback } from \"react\";\n\nconst fetchCurrentWeather = locationName => {\n  return fetch(`https://opendata.cwb.gov.tw/api/v1/rest/datastore/O-A0003-001?Authorization=CWB-507B37E0-0383-4D8C-878D-628B54EC3536&locationName=${locationName}`).then(response => response.json()).then(data => {\n    const locationData = data.records.location[0];\n    const weatherElements = locationData.weatherElement.reduce((neededElements, item) => {\n      if ([\"WDSD\", \"TEMP\", \"HUMD\"].includes(item.elementName)) {\n        neededElements[item.elementName] = item.elementValue;\n      }\n\n      return neededElements;\n    }, {});\n    return {\n      observationTime: locationData.time.obsTime,\n      locationName: locationData.locationName,\n      temperature: weatherElements.TEMP,\n      windSpeed: weatherElements.WDSD,\n      humid: weatherElements.HUMD\n    };\n  });\n};\n\nconst fetchWeatherForecast = cityName => {\n  return fetch(`https://opendata.cwb.gov.tw/api/v1/rest/datastore/F-C0032-001?Authorization=CWB-507B37E0-0383-4D8C-878D-628B54EC3536&locationName=${cityName}`).then(response => response.json()).then(data => {\n    const locationData = data.records.location[0];\n    const weatherElements = locationData.weatherElement.reduce((neededElements, item) => {\n      if ([\"Wx\", \"PoP\", \"CI\"].includes(item.elementName)) {\n        neededElements[item.elementName] = item.time[0].parameter;\n      }\n\n      return neededElements;\n    }, {});\n    return {\n      description: weatherElements.Wx.parameterName,\n      weatherCode: weatherElements.Wx.parameterValue,\n      rainPossibility: weatherElements.PoP.parameterName,\n      comfortability: weatherElements.CI.parameterName\n    };\n  });\n};\n\nconst useWeatherApi = currentLocation => {\n  const {\n    locationName,\n    cityName\n  } = currentLocation;\n  const [weatherElement, setWeatherElement] = useState({\n    observationTime: new Date(),\n    locationName: \"\",\n    humid: 0,\n    temperature: 0,\n    windSpeed: 0,\n    description: \"\",\n    weatherCode: 0,\n    rainPossibility: 0,\n    comfortability: \"\",\n    isLoading: true\n  });\n  const fetchData = useCallback(() => {\n    const fetchingData = async () => {\n      const [currentWeather, weatherForecast] = await Promise.all([fetchCurrentWeather(locationName), fetchWeatherForecast(cityName)]);\n      setWeatherElement({ ...currentWeather,\n        ...weatherForecast,\n        isLoading: false\n      });\n    };\n\n    setWeatherElement(prevState => ({ ...prevState,\n      isLoading: true\n    }));\n    fetchingData();\n  }, [locationName, cityName]);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  return [weatherElement, fetchData];\n};\n\nexport default useWeatherApi;","map":{"version":3,"sources":["C:/Users/陳威豪/realtime-weather-appV3/realtime-weather-appV3/src/useWeatherApi.js"],"names":["React","useState","useEffect","useCallback","fetchCurrentWeather","locationName","fetch","then","response","json","data","locationData","records","location","weatherElements","weatherElement","reduce","neededElements","item","includes","elementName","elementValue","observationTime","time","obsTime","temperature","TEMP","windSpeed","WDSD","humid","HUMD","fetchWeatherForecast","cityName","parameter","description","Wx","parameterName","weatherCode","parameterValue","rainPossibility","PoP","comfortability","CI","useWeatherApi","currentLocation","setWeatherElement","Date","isLoading","fetchData","fetchingData","currentWeather","weatherForecast","Promise","all","prevState"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nconst fetchCurrentWeather = locationName => {\r\n  return fetch(\r\n    `https://opendata.cwb.gov.tw/api/v1/rest/datastore/O-A0003-001?Authorization=CWB-507B37E0-0383-4D8C-878D-628B54EC3536&locationName=${locationName}`\r\n  )\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      const locationData = data.records.location[0];\r\n\r\n      const weatherElements = locationData.weatherElement.reduce(\r\n        (neededElements, item) => {\r\n          if ([\"WDSD\", \"TEMP\", \"HUMD\"].includes(item.elementName)) {\r\n            neededElements[item.elementName] = item.elementValue;\r\n          }\r\n          return neededElements;\r\n        },\r\n        {}\r\n      );\r\n\r\n      return {\r\n        observationTime: locationData.time.obsTime,\r\n        locationName: locationData.locationName,\r\n        temperature: weatherElements.TEMP,\r\n        windSpeed: weatherElements.WDSD,\r\n        humid: weatherElements.HUMD\r\n      };\r\n    });\r\n};\r\nconst fetchWeatherForecast = cityName => {\r\n  return fetch(\r\n    `https://opendata.cwb.gov.tw/api/v1/rest/datastore/F-C0032-001?Authorization=CWB-507B37E0-0383-4D8C-878D-628B54EC3536&locationName=${cityName}`\r\n  )\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      const locationData = data.records.location[0];\r\n      const weatherElements = locationData.weatherElement.reduce(\r\n        (neededElements, item) => {\r\n          if ([\"Wx\", \"PoP\", \"CI\"].includes(item.elementName)) {\r\n            neededElements[item.elementName] = item.time[0].parameter;\r\n          }\r\n          return neededElements;\r\n        },\r\n        {}\r\n      );\r\n\r\n      return {\r\n        description: weatherElements.Wx.parameterName,\r\n        weatherCode: weatherElements.Wx.parameterValue,\r\n        rainPossibility: weatherElements.PoP.parameterName,\r\n        comfortability: weatherElements.CI.parameterName\r\n      };\r\n    });\r\n};\r\nconst useWeatherApi = currentLocation => {\r\n  const { locationName, cityName } = currentLocation;\r\n  const [weatherElement, setWeatherElement] = useState({\r\n    observationTime: new Date(),\r\n    locationName: \"\",\r\n    humid: 0,\r\n    temperature: 0,\r\n    windSpeed: 0,\r\n    description: \"\",\r\n    weatherCode: 0,\r\n    rainPossibility: 0,\r\n    comfortability: \"\",\r\n    isLoading: true\r\n  });\r\n  const fetchData = useCallback(() => {\r\n    const fetchingData = async () => {\r\n      const [currentWeather, weatherForecast] = await Promise.all([\r\n        fetchCurrentWeather(locationName),\r\n        fetchWeatherForecast(cityName)\r\n      ]);\r\n\r\n      setWeatherElement({\r\n        ...currentWeather,\r\n        ...weatherForecast,\r\n        isLoading: false\r\n      });\r\n    };\r\n\r\n    setWeatherElement(prevState => ({\r\n      ...prevState,\r\n      isLoading: true\r\n    }));\r\n\r\n    fetchingData();\r\n  }, [locationName, cityName]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  return [weatherElement, fetchData];\r\n};\r\nexport default useWeatherApi;\r\n"]},"metadata":{},"sourceType":"module"}