{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u9673\\u5A01\\u8C6A\\\\realtime-weather-appV3\\\\realtime-weather-appV3\\\\src\\\\weatherIcon.js\";\n// STEP 1：載入 useMemo\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { ReactComponent as DayThunderstorm } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/day-thunderstorm.svg\";\nimport { ReactComponent as DayClear } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/day-clear.svg\";\nimport { ReactComponent as DayCloudyFog } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/day-cloudy-fog.svg\";\nimport { ReactComponent as DayCloudy } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/day-cloudy.svg\";\nimport { ReactComponent as DayFog } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/day-fog.svg\";\nimport { ReactComponent as DayPartiallyClearWithRain } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/day-partially-clear-with-rain.svg\";\nimport { ReactComponent as DaySnowing } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/day-snowing.svg\";\nimport { ReactComponent as NightThunderstorm } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/night-thunderstorm.svg\";\nimport { ReactComponent as NightClear } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/night-clear.svg\";\nimport { ReactComponent as NightCloudyFog } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/night-cloudy-fog.svg\";\nimport { ReactComponent as NightCloudy } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/night-cloudy.svg\";\nimport { ReactComponent as NightFog } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/night-fog.svg\";\nimport { ReactComponent as NightPartiallyClearWithRain } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/night-partially-clear-with-rain.svg\";\nimport { ReactComponent as NightSnowing } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/night-snowing.svg\";\nconst weatherTypes = {\n  isThunderstorm: [15, 16, 17, 18, 21, 22, 33, 34, 35, 36, 41],\n  isClear: [1],\n  isCloudyFog: [25, 26, 27, 28],\n  isCloudy: [2, 3, 4, 5, 6, 7],\n  isFog: [24],\n  isPartiallyClearWithRain: [8, 9, 10, 11, 12, 13, 14, 19, 20, 29, 30, 31, 32, 38, 39],\n  isSnowing: [23, 37, 42]\n};\nconst weatherIcons = {\n  day: {\n    isThunderstorm: /*#__PURE__*/React.createElement(DayThunderstorm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }),\n    isClear: /*#__PURE__*/React.createElement(DayClear, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 14\n      }\n    }),\n    isCloudyFog: /*#__PURE__*/React.createElement(DayCloudyFog, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 18\n      }\n    }),\n    isCloudy: /*#__PURE__*/React.createElement(DayCloudy, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }),\n    isFog: /*#__PURE__*/React.createElement(DayFog, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 12\n      }\n    }),\n    isPartiallyClearWithRain: /*#__PURE__*/React.createElement(DayPartiallyClearWithRain, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 31\n      }\n    }),\n    isSnowing: /*#__PURE__*/React.createElement(DaySnowing, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 16\n      }\n    })\n  },\n  night: {\n    isThunderstorm: /*#__PURE__*/React.createElement(NightThunderstorm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }),\n    isClear: /*#__PURE__*/React.createElement(NightClear, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 14\n      }\n    }),\n    isCloudyFog: /*#__PURE__*/React.createElement(NightCloudyFog, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 18\n      }\n    }),\n    isCloudy: /*#__PURE__*/React.createElement(NightCloudy, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }),\n    isFog: /*#__PURE__*/React.createElement(NightFog, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 12\n      }\n    }),\n    isPartiallyClearWithRain: /*#__PURE__*/React.createElement(NightPartiallyClearWithRain, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 31\n      }\n    }),\n    isSnowing: /*#__PURE__*/React.createElement(NightSnowing, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 16\n      }\n    })\n  }\n};\nconst IconContainer = styled.div`\n  flex-basis: 30%;\n\n  svg {\n    max-height: 110px;\n  }\n`;\n\nconst weatherCode2Type = weatherCode => Object.entries(weatherTypes).reduce((currentWeatherType, [weatherType, weatherCodes]) => weatherCodes.includes(Number(weatherCode)) ? weatherType : currentWeatherType, \"\");\n\nconst WeatherIcon = ({\n  currentWeatherCode,\n  moment\n}) => {\n  const [currentWeatherIcon, setCurrentWeatherIcon] = useState(\"isClear\");\n  const theWeatherIcon = useMemo(() => weatherCode2Type(currentWeatherCode), [currentWeatherCode]);\n  useEffect(() => {\n    setCurrentWeatherIcon(theWeatherIcon);\n  }, [theWeatherIcon]);\n  return /*#__PURE__*/React.createElement(IconContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, weatherIcons[moment][currentWeatherIcon]);\n};\n\nexport default WeatherIcon;","map":{"version":3,"sources":["C:/Users/陳威豪/realtime-weather-appV3/realtime-weather-appV3/src/weatherIcon.js"],"names":["React","useState","useEffect","useMemo","styled","weatherTypes","isThunderstorm","isClear","isCloudyFog","isCloudy","isFog","isPartiallyClearWithRain","isSnowing","weatherIcons","day","night","IconContainer","div","weatherCode2Type","weatherCode","Object","entries","reduce","currentWeatherType","weatherType","weatherCodes","includes","Number","WeatherIcon","currentWeatherCode","moment","currentWeatherIcon","setCurrentWeatherIcon","theWeatherIcon"],"mappings":"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","sourcesContent":["// STEP 1：載入 useMemo\r\nimport React, { useState, useEffect, useMemo } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { ReactComponent as DayThunderstorm } from \"./images/day-thunderstorm.svg\";\r\nimport { ReactComponent as DayClear } from \"./images/day-clear.svg\";\r\nimport { ReactComponent as DayCloudyFog } from \"./images/day-cloudy-fog.svg\";\r\nimport { ReactComponent as DayCloudy } from \"./images/day-cloudy.svg\";\r\nimport { ReactComponent as DayFog } from \"./images/day-fog.svg\";\r\nimport { ReactComponent as DayPartiallyClearWithRain } from \"./images/day-partially-clear-with-rain.svg\";\r\nimport { ReactComponent as DaySnowing } from \"./images/day-snowing.svg\";\r\nimport { ReactComponent as NightThunderstorm } from \"./images/night-thunderstorm.svg\";\r\nimport { ReactComponent as NightClear } from \"./images/night-clear.svg\";\r\nimport { ReactComponent as NightCloudyFog } from \"./images/night-cloudy-fog.svg\";\r\nimport { ReactComponent as NightCloudy } from \"./images/night-cloudy.svg\";\r\nimport { ReactComponent as NightFog } from \"./images/night-fog.svg\";\r\nimport { ReactComponent as NightPartiallyClearWithRain } from \"./images/night-partially-clear-with-rain.svg\";\r\nimport { ReactComponent as NightSnowing } from \"./images/night-snowing.svg\";\r\n\r\nconst weatherTypes = {\r\n  isThunderstorm: [15, 16, 17, 18, 21, 22, 33, 34, 35, 36, 41],\r\n  isClear: [1],\r\n  isCloudyFog: [25, 26, 27, 28],\r\n  isCloudy: [2, 3, 4, 5, 6, 7],\r\n  isFog: [24],\r\n  isPartiallyClearWithRain: [\r\n    8,\r\n    9,\r\n    10,\r\n    11,\r\n    12,\r\n    13,\r\n    14,\r\n    19,\r\n    20,\r\n    29,\r\n    30,\r\n    31,\r\n    32,\r\n    38,\r\n    39\r\n  ],\r\n  isSnowing: [23, 37, 42]\r\n};\r\n\r\nconst weatherIcons = {\r\n  day: {\r\n    isThunderstorm: <DayThunderstorm />,\r\n    isClear: <DayClear />,\r\n    isCloudyFog: <DayCloudyFog />,\r\n    isCloudy: <DayCloudy />,\r\n    isFog: <DayFog />,\r\n    isPartiallyClearWithRain: <DayPartiallyClearWithRain />,\r\n    isSnowing: <DaySnowing />\r\n  },\r\n  night: {\r\n    isThunderstorm: <NightThunderstorm />,\r\n    isClear: <NightClear />,\r\n    isCloudyFog: <NightCloudyFog />,\r\n    isCloudy: <NightCloudy />,\r\n    isFog: <NightFog />,\r\n    isPartiallyClearWithRain: <NightPartiallyClearWithRain />,\r\n    isSnowing: <NightSnowing />\r\n  }\r\n};\r\n\r\nconst IconContainer = styled.div`\r\n  flex-basis: 30%;\r\n\r\n  svg {\r\n    max-height: 110px;\r\n  }\r\n`;\r\n\r\nconst weatherCode2Type = weatherCode =>\r\n  Object.entries(weatherTypes).reduce(\r\n    (currentWeatherType, [weatherType, weatherCodes]) =>\r\n      weatherCodes.includes(Number(weatherCode))\r\n        ? weatherType\r\n        : currentWeatherType,\r\n    \"\"\r\n  );\r\n\r\nconst WeatherIcon = ({ currentWeatherCode, moment }) => {\r\n  const [currentWeatherIcon, setCurrentWeatherIcon] = useState(\"isClear\");\r\n\r\n  const theWeatherIcon = useMemo(() => weatherCode2Type(currentWeatherCode), [\r\n    currentWeatherCode\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    setCurrentWeatherIcon(theWeatherIcon);\r\n  }, [theWeatherIcon]);\r\n\r\n  return (\r\n    <IconContainer>{weatherIcons[moment][currentWeatherIcon]}</IconContainer>\r\n  );\r\n};\r\n\r\nexport default WeatherIcon;\r\n"]},"metadata":{},"sourceType":"module"}