{"ast":null,"code":"import { useCallback, useEffect, useState } from \"react\";\nimport Moment from \"moment\";\n\nconst fetchWeatherSunset = cityName => {\n  return fetch(`https://opendata.cwb.gov.tw/api/v1/rest/datastore/A-B0062-001?Authorization=CWB-7F486B33-2521-43D0-A5E1-4368F085EF09&locationName=${cityName}&dataTime=${Moment().format('YYYY-MM-DD')}`).then(response => response.json()).then(data => {\n    const sunsetData = data.records.locations.location[0].time[0].parameter;\n    const sunRising = sunsetData.find(item => item.parameterName === '日出時刻');\n    const sunFalling = sunsetData.find(item => item.parameterName === '日沒時刻');\n    return {\n      rising: sunRising.parameterValue,\n      falling: sunFalling.parameterValue\n    };\n  });\n};\n\nconst useSunsetApi = currentLocation => {\n  const {\n    locationName,\n    cityName\n  } = currentLocation;\n  const [sunset, setSunset] = useState();\n  const fetchData = useCallback(() => {\n    // console.log(num);\n    const fetchingData = async () => {\n      const [currentSunset] = await Promise.all([fetchWeatherSunset(cityName)]);\n      setSunset(currentSunset);\n    };\n\n    fetchingData();\n  }, [locationName, cityName]);\n  useEffect(() => {\n    // console.log(\"--- effect ---\");\n    fetchData();\n  }, [fetchData]);\n  return sunset;\n};\n\nexport default useSunsetApi;","map":{"version":3,"sources":["C:/Users/陳威豪/realtime-weather-app/src/useSunsetApi.js"],"names":["useCallback","useEffect","useState","Moment","fetchWeatherSunset","cityName","fetch","format","then","response","json","data","sunsetData","records","locations","location","time","parameter","sunRising","find","item","parameterName","sunFalling","rising","parameterValue","falling","useSunsetApi","currentLocation","locationName","sunset","setSunset","fetchData","fetchingData","currentSunset","Promise","all"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,SAArB,EAAgCC,QAAhC,QAA+C,OAA/C;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAOC,KAAK,CACP,qIAAoID,QAAS,aAAYF,MAAM,GAAGI,MAAT,CAAgB,YAAhB,CAA8B,EADhL,CAAL,CAGFC,IAHE,CAGGC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHf,EAIFF,IAJE,CAIGG,IAAI,IAAI;AACV,UAAMC,UAAU,GAAGD,IAAI,CAACE,OAAL,CAAaC,SAAb,CAAuBC,QAAvB,CAAgC,CAAhC,EAAmCC,IAAnC,CAAwC,CAAxC,EAA2CC,SAA9D;AAEA,UAAMC,SAAS,GAAGN,UAAU,CAACO,IAAX,CAAgBC,IAAI,IAAIA,IAAI,CAACC,aAAL,KAAuB,MAA/C,CAAlB;AACA,UAAMC,UAAU,GAAGV,UAAU,CAACO,IAAX,CAAgBC,IAAI,IAAIA,IAAI,CAACC,aAAL,KAAuB,MAA/C,CAAnB;AACA,WAAO;AACHE,MAAAA,MAAM,EAAEL,SAAS,CAACM,cADf;AAEHC,MAAAA,OAAO,EAAEH,UAAU,CAACE;AAFjB,KAAP;AAIH,GAbE,CAAP;AAcH,CAfD;;AAiBA,MAAME,YAAY,GAAGC,eAAe,IAAI;AACpC,QAAM;AAACC,IAAAA,YAAD;AAAevB,IAAAA;AAAf,MAA2BsB,eAAjC;AACA,QAAM,CAACE,MAAD,EAASC,SAAT,IAAsB5B,QAAQ,EAApC;AACA,QAAM6B,SAAS,GAAG/B,WAAW,CAAC,MAAM;AAChC;AACA,UAAMgC,YAAY,GAAG,YAAY;AAC7B,YAAM,CAACC,aAAD,IAAkB,MAAMC,OAAO,CAACC,GAAR,CAAY,CACtC/B,kBAAkB,CAACC,QAAD,CADoB,CAAZ,CAA9B;AAGAyB,MAAAA,SAAS,CAACG,aAAD,CAAT;AACH,KALD;;AAOAD,IAAAA,YAAY;AACf,GAV4B,EAU1B,CAACJ,YAAD,EAAevB,QAAf,CAV0B,CAA7B;AAYAJ,EAAAA,SAAS,CAAC,MAAM;AACZ;AAEA8B,IAAAA,SAAS;AACZ,GAJQ,EAIN,CAACA,SAAD,CAJM,CAAT;AAKA,SAAOF,MAAP;AACH,CArBD;;AAuBA,eAAeH,YAAf","sourcesContent":["import {useCallback, useEffect, useState} from \"react\";\r\nimport Moment from \"moment\";\r\n\r\nconst fetchWeatherSunset = cityName => {\r\n    return fetch(\r\n        `https://opendata.cwb.gov.tw/api/v1/rest/datastore/A-B0062-001?Authorization=CWB-7F486B33-2521-43D0-A5E1-4368F085EF09&locationName=${cityName}&dataTime=${Moment().format('YYYY-MM-DD')}`\r\n    )\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            const sunsetData = data.records.locations.location[0].time[0].parameter;\r\n\r\n            const sunRising = sunsetData.find(item => item.parameterName === '日出時刻')\r\n            const sunFalling = sunsetData.find(item => item.parameterName === '日沒時刻')\r\n            return {\r\n                rising: sunRising.parameterValue,\r\n                falling: sunFalling.parameterValue\r\n            }\r\n        })\r\n}\r\n\r\nconst useSunsetApi = currentLocation => {\r\n    const {locationName, cityName} = currentLocation;\r\n    const [sunset, setSunset] = useState();\r\n    const fetchData = useCallback(() => {\r\n        // console.log(num);\r\n        const fetchingData = async () => {\r\n            const [currentSunset] = await Promise.all([\r\n                fetchWeatherSunset(cityName)\r\n            ]);\r\n            setSunset(currentSunset)\r\n        };\r\n\r\n        fetchingData();\r\n    }, [locationName, cityName]);\r\n\r\n    useEffect(() => {\r\n        // console.log(\"--- effect ---\");\r\n\r\n        fetchData();\r\n    }, [fetchData]);\r\n    return sunset\r\n}\r\n\r\nexport default useSunsetApi;"]},"metadata":{},"sourceType":"module"}