{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/\\u9673\\u5A01\\u8C6A/realtime-weather-appV3/realtime-weather-appV3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject10;import React from\"react\";import styled from\"@emotion/styled\";import WeatherIcon from\"./weatherIcon.js\";import{ReactComponent as AirFlowIcon}from\"@svgr/webpack?-svgo,+titleProp,+ref!./images/airFlow.svg\";import{ReactComponent as RainIcon}from\"@svgr/webpack?-svgo,+titleProp,+ref!./images/rain.svg\";import{ReactComponent as RefreshIcon}from\"@svgr/webpack?-svgo,+titleProp,+ref!./images/refresh.svg\";import{ReactComponent as LoadingIcon}from\"@svgr/webpack?-svgo,+titleProp,+ref!./images/loading.svg\";import{ReactComponent as CogIcon}from\"@svgr/webpack?-svgo,+titleProp,+ref!./images/cog.svg\";var WeatherCardWrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  position: relative;\\n  min-width: 360px;\\n  box-shadow: \",\";\\n  background-color: \",\";\\n  box-sizing: border-box;\\n  padding: 30px 15px;\\n\"])),function(_ref){var theme=_ref.theme;return theme.boxShadow;},function(_ref2){var theme=_ref2.theme;return theme.foregroundColor;});var Cog=styled(CogIcon)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: 30px;\\n  right: 15px;\\n  width: 15px;\\n  height: 15px;\\n  cursor: pointer;\\n\"])));var Location=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  font-size: 28px;\\n  color: \",\";\\n  margin-bottom: 20px;\\n\"])),function(_ref3){var theme=_ref3.theme;return theme.titleColor;});var Description=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  font-size: 16px;\\n  color: \",\";\\n  margin-bottom: 30px;\\n\"])),function(_ref4){var theme=_ref4.theme;return theme.textColor;});var CurrentWeather=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-bottom: 30px;\\n\"])));var Temperature=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  color: \",\";\\n  font-size: 96px;\\n  font-weight: 300;\\n  display: flex;\\n\"])),function(_ref5){var theme=_ref5.theme;return theme.temperatrureColor;});var Celsius=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  font-weight: normal;\\n  font-size: 42px;\\n\"])));var AirFlow=styled.div(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  font-size: 16x;\\n  font-weight: 300;\\n  color: \",\";\\n  margin-bottom: 20px;\\n\\n  svg {\\n    width: 25px;\\n    height: auto;\\n    margin-right: 30px;\\n  }\\n\"])),function(_ref6){var theme=_ref6.theme;return theme.textColor;});var Rain=styled.div(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  font-size: 16x;\\n  font-weight: 300;\\n  color: \",\";\\n\\n  svg {\\n    width: 25px;\\n    height: auto;\\n    margin-right: 30px;\\n  }\\n\"])),function(_ref7){var theme=_ref7.theme;return theme.textColor;});var Refresh=styled.div(_templateObject10||(_templateObject10=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  right: 15px;\\n  bottom: 15px;\\n  font-size: 12px;\\n  display: inline-flex;\\n  align-items: flex-end;\\n  color: \",\";\\n\\n  svg {\\n    margin-left: 10px;\\n    width: 15px;\\n    height: 15px;\\n    cursor: pointer;\\n    animation: rotate infinite 1.5s linear;\\n    animation-duration: \",\";\\n  }\\n\\n  @keyframes rotate {\\n    from {\\n      transform: rotate(360deg);\\n    }\\n    to {\\n      transform: rotate(0deg);\\n    }\\n  }\\n\"])),function(_ref8){var theme=_ref8.theme;return theme.textColor;},function(_ref9){var isLoading=_ref9.isLoading;return isLoading?\"1.5s\":\"0s\";});var WeatherCard=function WeatherCard(props){var weatherElement=props.weatherElement,moment=props.moment,fetchData=props.fetchData,setCurrentPage=props.setCurrentPage,cityName=props.cityName;var observationTime=weatherElement.observationTime,temperature=weatherElement.temperature,windSpeed=weatherElement.windSpeed,description=weatherElement.description,weatherCode=weatherElement.weatherCode,rainPossibility=weatherElement.rainPossibility,comfortability=weatherElement.comfortability,isLoading=weatherElement.isLoading;return/*#__PURE__*/React.createElement(WeatherCardWrapper,null,/*#__PURE__*/React.createElement(Cog,{onClick:function onClick(){return setCurrentPage(\"WeatherSetting\");}}),/*#__PURE__*/React.createElement(Location,null,cityName),/*#__PURE__*/React.createElement(Description,null,description,\" \",comfortability),/*#__PURE__*/React.createElement(CurrentWeather,null,/*#__PURE__*/React.createElement(Temperature,null,Math.round(temperature),\" \",/*#__PURE__*/React.createElement(Celsius,null,\"\\xB0C\")),/*#__PURE__*/React.createElement(WeatherIcon,{currentWeatherCode:weatherCode,moment:moment||\"day\"})),/*#__PURE__*/React.createElement(AirFlow,null,/*#__PURE__*/React.createElement(AirFlowIcon,null),windSpeed,\" m/h\"),/*#__PURE__*/React.createElement(Rain,null,/*#__PURE__*/React.createElement(RainIcon,null),Math.round(rainPossibility),\" %\"),/*#__PURE__*/React.createElement(Refresh,{onClick:fetchData,isLoading:isLoading},\"\\u6700\\u5F8C\\u89C0\\u6E2C\\u6642\\u9593\\uFF1A\",new Intl.DateTimeFormat(\"zh-TW\",{hour:\"numeric\",minute:\"numeric\"}).format(new Date(observationTime)),\" \",isLoading?/*#__PURE__*/React.createElement(LoadingIcon,null):/*#__PURE__*/React.createElement(RefreshIcon,null)));};export default WeatherCard;","map":{"version":3,"sources":["C:/Users/陳威豪/realtime-weather-appV3/realtime-weather-appV3/src/weatherCard.js"],"names":["React","styled","WeatherIcon","WeatherCardWrapper","div","theme","boxShadow","foregroundColor","Cog","CogIcon","Location","titleColor","Description","textColor","CurrentWeather","Temperature","temperatrureColor","Celsius","AirFlow","Rain","Refresh","isLoading","WeatherCard","props","weatherElement","moment","fetchData","setCurrentPage","cityName","observationTime","temperature","windSpeed","description","weatherCode","rainPossibility","comfortability","Math","round","Intl","DateTimeFormat","hour","minute","format","Date"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport WeatherIcon from \"./weatherIcon.js\";\r\nimport { ReactComponent as AirFlowIcon } from \"./images/airFlow.svg\";\r\nimport { ReactComponent as RainIcon } from \"./images/rain.svg\";\r\nimport { ReactComponent as RefreshIcon } from \"./images/refresh.svg\";\r\nimport { ReactComponent as LoadingIcon } from \"./images/loading.svg\";\r\nimport { ReactComponent as CogIcon } from \"./images/cog.svg\";\r\n\r\nconst WeatherCardWrapper = styled.div`\r\n  position: relative;\r\n  min-width: 360px;\r\n  box-shadow: ${({ theme }) => theme.boxShadow};\r\n  background-color: ${({ theme }) => theme.foregroundColor};\r\n  box-sizing: border-box;\r\n  padding: 30px 15px;\r\n`;\r\n\r\nconst Cog = styled(CogIcon)`\r\n  position: absolute;\r\n  top: 30px;\r\n  right: 15px;\r\n  width: 15px;\r\n  height: 15px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Location = styled.div`\r\n  font-size: 28px;\r\n  color: ${({ theme }) => theme.titleColor};\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Description = styled.div`\r\n  font-size: 16px;\r\n  color: ${({ theme }) => theme.textColor};\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst CurrentWeather = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst Temperature = styled.div`\r\n  color: ${({ theme }) => theme.temperatrureColor};\r\n  font-size: 96px;\r\n  font-weight: 300;\r\n  display: flex;\r\n`;\r\n\r\nconst Celsius = styled.div`\r\n  font-weight: normal;\r\n  font-size: 42px;\r\n`;\r\n\r\nconst AirFlow = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 16x;\r\n  font-weight: 300;\r\n  color: ${({ theme }) => theme.textColor};\r\n  margin-bottom: 20px;\r\n\r\n  svg {\r\n    width: 25px;\r\n    height: auto;\r\n    margin-right: 30px;\r\n  }\r\n`;\r\n\r\nconst Rain = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 16x;\r\n  font-weight: 300;\r\n  color: ${({ theme }) => theme.textColor};\r\n\r\n  svg {\r\n    width: 25px;\r\n    height: auto;\r\n    margin-right: 30px;\r\n  }\r\n`;\r\n\r\nconst Refresh = styled.div`\r\n  position: absolute;\r\n  right: 15px;\r\n  bottom: 15px;\r\n  font-size: 12px;\r\n  display: inline-flex;\r\n  align-items: flex-end;\r\n  color: ${({ theme }) => theme.textColor};\r\n\r\n  svg {\r\n    margin-left: 10px;\r\n    width: 15px;\r\n    height: 15px;\r\n    cursor: pointer;\r\n    animation: rotate infinite 1.5s linear;\r\n    animation-duration: ${({ isLoading }) => (isLoading ? \"1.5s\" : \"0s\")};\r\n  }\r\n\r\n  @keyframes rotate {\r\n    from {\r\n      transform: rotate(360deg);\r\n    }\r\n    to {\r\n      transform: rotate(0deg);\r\n    }\r\n  }\r\n`;\r\n\r\nconst WeatherCard = props => {\r\n  const { weatherElement, moment, fetchData, setCurrentPage, cityName } = props;\r\n  const {\r\n    observationTime,\r\n    temperature,\r\n    windSpeed,\r\n    description,\r\n    weatherCode,\r\n    rainPossibility,\r\n    comfortability,\r\n    isLoading\r\n  } = weatherElement;\r\n  return (\r\n    <WeatherCardWrapper>\r\n      <Cog onClick={() => setCurrentPage(\"WeatherSetting\")} />\r\n      <Location>{cityName}</Location>\r\n      <Description>\r\n        {description} {comfortability}\r\n      </Description>\r\n      <CurrentWeather>\r\n        <Temperature>\r\n          {Math.round(temperature)} <Celsius>°C</Celsius>\r\n        </Temperature>\r\n        <WeatherIcon\r\n          currentWeatherCode={weatherCode}\r\n          moment={moment || \"day\"}\r\n        />\r\n      </CurrentWeather>\r\n      <AirFlow>\r\n        <AirFlowIcon />\r\n        {windSpeed} m/h\r\n      </AirFlow>\r\n      <Rain>\r\n        <RainIcon />\r\n        {Math.round(rainPossibility)} %\r\n      </Rain>\r\n      <Refresh onClick={fetchData} isLoading={isLoading}>\r\n        最後觀測時間：\r\n        {new Intl.DateTimeFormat(\"zh-TW\", {\r\n          hour: \"numeric\",\r\n          minute: \"numeric\"\r\n        }).format(new Date(observationTime))}{\" \"}\r\n        {isLoading ? <LoadingIcon /> : <RefreshIcon />}\r\n      </Refresh>\r\n    </WeatherCardWrapper>\r\n  );\r\n};\r\nexport default WeatherCard;\r\n"]},"metadata":{},"sourceType":"module"}