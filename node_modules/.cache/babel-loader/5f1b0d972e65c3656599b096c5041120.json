{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u9673\\u5A01\\u8C6A\\\\realtime-weather-appV3\\\\realtime-weather-appV3\\\\src\\\\weatherCard.js\";\nimport React from \"react\";\nimport styled from \"@emotion/styled\";\nimport WeatherIcon from \"./weatherIcon.js\";\nimport { ReactComponent as AirFlowIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/airFlow.svg\";\nimport { ReactComponent as RainIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/rain.svg\";\nimport { ReactComponent as RefreshIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/refresh.svg\";\nimport { ReactComponent as LoadingIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/loading.svg\";\nimport { ReactComponent as CogIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/cog.svg\";\nconst WeatherCardWrapper = styled.div`\n  position: relative;\n  min-width: 360px;\n  box-shadow: ${({\n  theme\n}) => theme.boxShadow};\n  background-color: ${({\n  theme\n}) => theme.foregroundColor};\n  box-sizing: border-box;\n  padding: 30px 15px;\n`;\nconst Cog = styled(CogIcon)`\n  position: absolute;\n  top: 30px;\n  right: 15px;\n  width: 15px;\n  height: 15px;\n  cursor: pointer;\n`;\nconst Location = styled.div`\n  font-size: 28px;\n  color: ${({\n  theme\n}) => theme.titleColor};\n  margin-bottom: 20px;\n`;\nconst Description = styled.div`\n  font-size: 16px;\n  color: ${({\n  theme\n}) => theme.textColor};\n  margin-bottom: 30px;\n`;\nconst CurrentWeather = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 30px;\n`;\nconst Temperature = styled.div`\n  color: ${({\n  theme\n}) => theme.temperatrureColor};\n  font-size: 96px;\n  font-weight: 300;\n  display: flex;\n`;\nconst Celsius = styled.div`\n  font-weight: normal;\n  font-size: 42px;\n`;\nconst AirFlow = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 16x;\n  font-weight: 300;\n  color: ${({\n  theme\n}) => theme.textColor};\n  margin-bottom: 20px;\n\n  svg {\n    width: 25px;\n    height: auto;\n    margin-right: 30px;\n  }\n`;\nconst Rain = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 16x;\n  font-weight: 300;\n  color: ${({\n  theme\n}) => theme.textColor};\n\n  svg {\n    width: 25px;\n    height: auto;\n    margin-right: 30px;\n  }\n`;\nconst Refresh = styled.div`\n  position: absolute;\n  right: 15px;\n  bottom: 15px;\n  font-size: 12px;\n  display: inline-flex;\n  align-items: flex-end;\n  color: ${({\n  theme\n}) => theme.textColor};\n\n  svg {\n    margin-left: 10px;\n    width: 15px;\n    height: 15px;\n    cursor: pointer;\n    animation: rotate infinite 1.5s linear;\n    animation-duration: ${({\n  isLoading\n}) => isLoading ? \"1.5s\" : \"0s\"};\n  }\n\n  @keyframes rotate {\n    from {\n      transform: rotate(360deg);\n    }\n    to {\n      transform: rotate(0deg);\n    }\n  }\n`;\n\nconst WeatherCard = props => {\n  const {\n    weatherElement,\n    moment,\n    fetchData,\n    setCurrentPage,\n    cityName\n  } = props;\n  const {\n    observationTime,\n    temperature,\n    windSpeed,\n    description,\n    weatherCode,\n    rainPossibility,\n    comfortability,\n    isLoading\n  } = weatherElement;\n  return /*#__PURE__*/React.createElement(WeatherCardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Cog, {\n    onClick: () => setCurrentPage(\"WeatherSetting\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Location, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, cityName), /*#__PURE__*/React.createElement(Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, description, \" \", comfortability), /*#__PURE__*/React.createElement(CurrentWeather, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Temperature, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, Math.round(temperature), \" \", /*#__PURE__*/React.createElement(Celsius, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 37\n    }\n  }, \"\\xB0C\")), /*#__PURE__*/React.createElement(WeatherIcon, {\n    currentWeatherCode: weatherCode,\n    moment: moment || \"day\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(AirFlow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AirFlowIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }), windSpeed, \" m/h\"), /*#__PURE__*/React.createElement(Rain, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RainIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }), Math.round(rainPossibility), \" %\"), /*#__PURE__*/React.createElement(Refresh, {\n    onClick: fetchData,\n    isLoading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, \"\\u6700\\u5F8C\\u89C0\\u6E2C\\u6642\\u9593\\uFF1A\", new Intl.DateTimeFormat(\"zh-TW\", {\n    hour: \"numeric\",\n    minute: \"numeric\"\n  }).format(new Date(observationTime)), \" \", isLoading ? /*#__PURE__*/React.createElement(LoadingIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 22\n    }\n  }) : /*#__PURE__*/React.createElement(RefreshIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 40\n    }\n  })));\n};\n\nexport default WeatherCard;","map":{"version":3,"sources":["C:/Users/陳威豪/realtime-weather-appV3/realtime-weather-appV3/src/weatherCard.js"],"names":["React","styled","WeatherIcon","WeatherCardWrapper","div","theme","boxShadow","foregroundColor","Cog","CogIcon","Location","titleColor","Description","textColor","CurrentWeather","Temperature","temperatrureColor","Celsius","AirFlow","Rain","Refresh","isLoading","WeatherCard","props","weatherElement","moment","fetchData","setCurrentPage","cityName","observationTime","temperature","windSpeed","description","weatherCode","rainPossibility","comfortability","Math","round","Intl","DateTimeFormat","hour","minute","format","Date"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport WeatherIcon from \"./weatherIcon.js\";\r\nimport { ReactComponent as AirFlowIcon } from \"./images/airFlow.svg\";\r\nimport { ReactComponent as RainIcon } from \"./images/rain.svg\";\r\nimport { ReactComponent as RefreshIcon } from \"./images/refresh.svg\";\r\nimport { ReactComponent as LoadingIcon } from \"./images/loading.svg\";\r\nimport { ReactComponent as CogIcon } from \"./images/cog.svg\";\r\n\r\nconst WeatherCardWrapper = styled.div`\r\n  position: relative;\r\n  min-width: 360px;\r\n  box-shadow: ${({ theme }) => theme.boxShadow};\r\n  background-color: ${({ theme }) => theme.foregroundColor};\r\n  box-sizing: border-box;\r\n  padding: 30px 15px;\r\n`;\r\n\r\nconst Cog = styled(CogIcon)`\r\n  position: absolute;\r\n  top: 30px;\r\n  right: 15px;\r\n  width: 15px;\r\n  height: 15px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Location = styled.div`\r\n  font-size: 28px;\r\n  color: ${({ theme }) => theme.titleColor};\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Description = styled.div`\r\n  font-size: 16px;\r\n  color: ${({ theme }) => theme.textColor};\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst CurrentWeather = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst Temperature = styled.div`\r\n  color: ${({ theme }) => theme.temperatrureColor};\r\n  font-size: 96px;\r\n  font-weight: 300;\r\n  display: flex;\r\n`;\r\n\r\nconst Celsius = styled.div`\r\n  font-weight: normal;\r\n  font-size: 42px;\r\n`;\r\n\r\nconst AirFlow = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 16x;\r\n  font-weight: 300;\r\n  color: ${({ theme }) => theme.textColor};\r\n  margin-bottom: 20px;\r\n\r\n  svg {\r\n    width: 25px;\r\n    height: auto;\r\n    margin-right: 30px;\r\n  }\r\n`;\r\n\r\nconst Rain = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 16x;\r\n  font-weight: 300;\r\n  color: ${({ theme }) => theme.textColor};\r\n\r\n  svg {\r\n    width: 25px;\r\n    height: auto;\r\n    margin-right: 30px;\r\n  }\r\n`;\r\n\r\nconst Refresh = styled.div`\r\n  position: absolute;\r\n  right: 15px;\r\n  bottom: 15px;\r\n  font-size: 12px;\r\n  display: inline-flex;\r\n  align-items: flex-end;\r\n  color: ${({ theme }) => theme.textColor};\r\n\r\n  svg {\r\n    margin-left: 10px;\r\n    width: 15px;\r\n    height: 15px;\r\n    cursor: pointer;\r\n    animation: rotate infinite 1.5s linear;\r\n    animation-duration: ${({ isLoading }) => (isLoading ? \"1.5s\" : \"0s\")};\r\n  }\r\n\r\n  @keyframes rotate {\r\n    from {\r\n      transform: rotate(360deg);\r\n    }\r\n    to {\r\n      transform: rotate(0deg);\r\n    }\r\n  }\r\n`;\r\n\r\nconst WeatherCard = props => {\r\n  const { weatherElement, moment, fetchData, setCurrentPage, cityName } = props;\r\n  const {\r\n    observationTime,\r\n    temperature,\r\n    windSpeed,\r\n    description,\r\n    weatherCode,\r\n    rainPossibility,\r\n    comfortability,\r\n    isLoading\r\n  } = weatherElement;\r\n  return (\r\n    <WeatherCardWrapper>\r\n      <Cog onClick={() => setCurrentPage(\"WeatherSetting\")} />\r\n      <Location>{cityName}</Location>\r\n      <Description>\r\n        {description} {comfortability}\r\n      </Description>\r\n      <CurrentWeather>\r\n        <Temperature>\r\n          {Math.round(temperature)} <Celsius>°C</Celsius>\r\n        </Temperature>\r\n        <WeatherIcon\r\n          currentWeatherCode={weatherCode}\r\n          moment={moment || \"day\"}\r\n        />\r\n      </CurrentWeather>\r\n      <AirFlow>\r\n        <AirFlowIcon />\r\n        {windSpeed} m/h\r\n      </AirFlow>\r\n      <Rain>\r\n        <RainIcon />\r\n        {Math.round(rainPossibility)} %\r\n      </Rain>\r\n      <Refresh onClick={fetchData} isLoading={isLoading}>\r\n        最後觀測時間：\r\n        {new Intl.DateTimeFormat(\"zh-TW\", {\r\n          hour: \"numeric\",\r\n          minute: \"numeric\"\r\n        }).format(new Date(observationTime))}{\" \"}\r\n        {isLoading ? <LoadingIcon /> : <RefreshIcon />}\r\n      </Refresh>\r\n    </WeatherCardWrapper>\r\n  );\r\n};\r\nexport default WeatherCard;\r\n"]},"metadata":{},"sourceType":"module"}