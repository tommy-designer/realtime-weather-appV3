{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u9673\\u5A01\\u8C6A\\\\realtime-weather-app\\\\src\\\\WeatherSetting.js\";\nimport styled from \"@emotion/styled\";\nimport React, { useState } from \"react\";\nimport { availableLocations } from \"./utils\";\nconst WeatherSettingWrapper = styled.div`\n  position: relative;\n  min-width: 360px;\n  box-shadow: ${({\n  theme\n}) => theme.boxShadow};\n  background-color: ${({\n  theme\n}) => theme.foregroundColor};\n  box-sizing: border-box;\n  padding: 20px;\n`;\nconst Title = styled.div`\n  font-size: 28px;\n  color: ${({\n  theme\n}) => theme.titleColor};\n  margin-bottom: 30px;\n`;\nconst StyledLabel = styled.label`\n  display: block;\n  font-size: 16px;\n  color: ${({\n  theme\n}) => theme.textColor};\n  margin-bottom: 15px;\n`;\nconst StyledInputList = styled.input`\n  display: block;\n  box-sizing: border-box;\n  background: transparent;\n  border: 1px solid ${({\n  theme\n}) => theme.textColor};\n  outline: none;\n  width: 100%;\n  max-width: 100%;\n  color: ${({\n  theme\n}) => theme.textColor};\n  font-size: 16px;\n  padding: 7px 10px;\n  margin-bottom: 40px;\n`;\nconst ButtonGroup = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  > button {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    white-space: nowrap;\n    user-select: none;\n    margin: 0;\n    letter-spacing: 0.3px;\n    line-height: 1;\n    cursor: pointer;\n    overflow: visible;\n    text-transform: none;\n    border: 1px solid transparent;\n    background-color: transparent;\n    height: 35px;\n    width: 80px;\n    border-radius: 5px;\n\n    &:focus,\n    &.focus {\n      outline: 0;\n      box-shadow: none;\n    }\n\n    &::-moz-focus-inner {\n      padding: 0;\n      border-style: none;\n    }\n  }\n`;\nconst Back = styled.button`\n  && {\n    color: ${({\n  theme\n}) => theme.textColor};\n    border-color: ${({\n  theme\n}) => theme.textColor};\n  }\n`;\nconst Save = styled.button`\n  && {\n    color: white;\n    background-color: #40a9f3;\n  }\n`;\nconst locations = availableLocations.map(location => location.cityName);\n\nconst WeatherSetting = ({\n  setCurrentPage,\n  cityName,\n  setCurrentCity\n}) => {\n  const [locationName, setLocationName] = useState(cityName);\n\n  const handleChange = e => {\n    console.log(e.target.value);\n    setLocationName(e.target.value);\n  };\n\n  const handleSave = () => {\n    if (locations.includes(locationName)) {\n      console.log(`儲存地區的資訊為:${locationName}`);\n      setCurrentCity(locationName);\n      setCurrentPage(\"WeatherCard\");\n    } else {\n      alert(`儲存失敗:您輸入的${locationName}並非有效的地區`);\n      return;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(WeatherSettingWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, \"\\u8A2D\\u5B9A\"), /*#__PURE__*/React.createElement(StyledLabel, {\n    htmlFor: \"location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, \"\\u5730\\u5340\"), /*#__PURE__*/React.createElement(StyledInputList, {\n    list: \"location-list\",\n    id: \"location\",\n    name: \"location\",\n    onChange: handleChange,\n    value: locationName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"datalist\", {\n    id: \"location-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, locations.map(location => /*#__PURE__*/React.createElement(\"option\", {\n    value: location,\n    key: location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Back, {\n    onClick: () => setCurrentPage(\"WeatherCard\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, \"\\u8FD4\\u56DE\"), /*#__PURE__*/React.createElement(Save, {\n    onClick: handleSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, \"\\u5132\\u5B58\")));\n};\n\nexport default WeatherSetting;","map":{"version":3,"sources":["C:/Users/陳威豪/realtime-weather-app/src/WeatherSetting.js"],"names":["styled","React","useState","availableLocations","WeatherSettingWrapper","div","theme","boxShadow","foregroundColor","Title","titleColor","StyledLabel","label","textColor","StyledInputList","input","ButtonGroup","Back","button","Save","locations","map","location","cityName","WeatherSetting","setCurrentPage","setCurrentCity","locationName","setLocationName","handleChange","e","console","log","target","value","handleSave","includes","alert"],"mappings":"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","sourcesContent":["import styled from \"@emotion/styled\";\r\nimport React, { useState } from \"react\";\r\nimport { availableLocations } from \"./utils\";\r\n\r\nconst WeatherSettingWrapper = styled.div`\r\n  position: relative;\r\n  min-width: 360px;\r\n  box-shadow: ${({ theme }) => theme.boxShadow};\r\n  background-color: ${({ theme }) => theme.foregroundColor};\r\n  box-sizing: border-box;\r\n  padding: 20px;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 28px;\r\n  color: ${({ theme }) => theme.titleColor};\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst StyledLabel = styled.label`\r\n  display: block;\r\n  font-size: 16px;\r\n  color: ${({ theme }) => theme.textColor};\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst StyledInputList = styled.input`\r\n  display: block;\r\n  box-sizing: border-box;\r\n  background: transparent;\r\n  border: 1px solid ${({ theme }) => theme.textColor};\r\n  outline: none;\r\n  width: 100%;\r\n  max-width: 100%;\r\n  color: ${({ theme }) => theme.textColor};\r\n  font-size: 16px;\r\n  padding: 7px 10px;\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nconst ButtonGroup = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  > button {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    white-space: nowrap;\r\n    user-select: none;\r\n    margin: 0;\r\n    letter-spacing: 0.3px;\r\n    line-height: 1;\r\n    cursor: pointer;\r\n    overflow: visible;\r\n    text-transform: none;\r\n    border: 1px solid transparent;\r\n    background-color: transparent;\r\n    height: 35px;\r\n    width: 80px;\r\n    border-radius: 5px;\r\n\r\n    &:focus,\r\n    &.focus {\r\n      outline: 0;\r\n      box-shadow: none;\r\n    }\r\n\r\n    &::-moz-focus-inner {\r\n      padding: 0;\r\n      border-style: none;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Back = styled.button`\r\n  && {\r\n    color: ${({ theme }) => theme.textColor};\r\n    border-color: ${({ theme }) => theme.textColor};\r\n  }\r\n`;\r\n\r\nconst Save = styled.button`\r\n  && {\r\n    color: white;\r\n    background-color: #40a9f3;\r\n  }\r\n`;\r\nconst locations = availableLocations.map(location => location.cityName);\r\n\r\nconst WeatherSetting = ({ setCurrentPage, cityName, setCurrentCity }) => {\r\n  const [locationName, setLocationName] = useState(cityName);\r\n  const handleChange = e => {\r\n    console.log(e.target.value);\r\n    setLocationName(e.target.value);\r\n  };\r\n  const handleSave = () => {\r\n    if (locations.includes(locationName)) {\r\n      console.log(`儲存地區的資訊為:${locationName}`);\r\n      setCurrentCity(locationName);\r\n      setCurrentPage(\"WeatherCard\");\r\n    } else {\r\n      alert(`儲存失敗:您輸入的${locationName}並非有效的地區`);\r\n      return;\r\n    }\r\n  };\r\n  return (\r\n    <WeatherSettingWrapper>\r\n      <Title>設定</Title>\r\n      <StyledLabel htmlFor=\"location\">地區</StyledLabel>\r\n      <StyledInputList\r\n        list=\"location-list\"\r\n        id=\"location\"\r\n        name=\"location\"\r\n        onChange={handleChange}\r\n        value={locationName}\r\n      />\r\n\r\n      <datalist id=\"location-list\">\r\n        {locations.map(location => (\r\n          <option value={location} key={location} />\r\n        ))}\r\n      </datalist>\r\n\r\n      <ButtonGroup>\r\n        <Back onClick={() => setCurrentPage(\"WeatherCard\")}>返回</Back>\r\n        <Save onClick={handleSave}>儲存</Save>\r\n      </ButtonGroup>\r\n    </WeatherSettingWrapper>\r\n  );\r\n};\r\n\r\nexport default WeatherSetting;\r\n"]},"metadata":{},"sourceType":"module"}